- name: install nvm in the specified version
  shell: "curl -o- https://raw.githubusercontent.com/creationix/nvm/{{ nvm_version }}/install.sh | bash"
  become: True
  become_user: "{{ nvm_user }}"
  args:
    executable: /bin/bash
    creates: "{{ nvm_user_home }}/.nvm/nvm.sh"
    warn: False

- name: add source nvm bash completion to .bashrc
  blockinfile:
    path: "{{ nvm_user_home }}/.bashrc"
    marker: '## ANSIBLE role-nvm {mark} ##'
    block: |
      export NVM_DIR="$HOME/.nvm"
      export NPM_CONFIG_PREFIX=
      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
      [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
      export PATH="$PATH:{{ nvm_user_home }}/node_modules/.bin/"
    owner: "{{ nvm_user }}"
    group: "{{ nvm_group }}"
    mode: 0640

- name: install nodejs
  shell: |
    source {{ nvm_user_home }}/.nvm/nvm.sh
    nvm install {{ nvm_nodejs_version }}
  become: True
  become_user: "{{ nvm_user }}"
  args:
    executable: /bin/bash
    creates: "{{ nvm_user_home }}/.nvm/versions/node/v{{ nvm_nodejs_version }}/bin/node"

- name: set the specified default nodejs version
  copy:
    dest: "{{ nvm_user_home }}/.nvm/alias/default"
    content: "{{ nvm_nodejs_default_version | replace('v', '') }}"
    owner: "{{ nvm_user }}"
    group: "{{ nvm_group }}"
    mode: 0640

- name: install npm packages
  # npm: TODO new modules bugs around
  #   name: "{{ nvm_npm_package_installed }}"
  #   executable: "{{ nvm_user_home }}/.nvm/versions/node/v{{ nvm_nodejs_version }}/bin/npm"
  #   path: "{{ nvm_user_home }}"
  shell: |
    cd; source {{ nvm_user_home }}/.nvm/nvm.sh
    npm install {{ nvm_npm_package_installed }}
  args:
    executable: /bin/bash
    creates: "{{ nvm_user_home }}/node_modules/{{ nvm_npm_package_installed }}"
  become: True
  become_user: "{{ nvm_user }}"
  with_items: "{{ nvm_npm_packages_installed }}"
  loop_control:
    loop_var: nvm_npm_package_installed

- name: remove npm packages
  # npm: TODO new modules bugs around
  #   name: "{{ nvm_npm_package_removed }}"
  #   executable: "{{ nvm_user_home }}/.nvm/versions/node/v{{ nvm_nodejs_version }}/bin/npm"
  #   path: "{{ nvm_user_home }}"
  shell: |
    cd; source {{ nvm_user_home }}/.nvm/nvm.sh
    npm uninstall {{ nvm_npm_package_removed }}
  args:
    executable: /bin/bash
    removes: "{{ nvm_user_home }}/node_modules/{{ nvm_npm_package_removed }}"
  become: True
  become_user: "{{ nvm_user }}"
  with_items: "{{ nvm_npm_packages_removed }}"
  loop_control:
    loop_var: nvm_npm_package_removed
